(undo-tree-save-format-version . 1)
"ad3cf6015afc06b5996f41e66c25f40e5141d353"
[nil nil nil nil (25175 6522 608598 402000) 0 nil]
([nil nil ((1 . 3) (t . -1)) nil (25175 6522 608596 526000) 0 nil])
([nil nil ((3 . 10)) nil (25175 6522 608594 811000) 0 nil])
([nil nil ((10 . 11)) nil (25175 6522 608593 548000) 0 nil])
([nil nil ((11 . 13)) nil (25175 6522 608592 357000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -11) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t face org-level-1)) . -12) (undo-tree-id365 . -1) (undo-tree-id366 . -1) 13) nil (25175 6522 608590 238000) 0 nil])
([nil nil ((11 . 14)) nil (25175 6522 608584 31000) 0 nil])
([nil nil ((14 . 17)) nil (25175 6522 608582 783000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -16) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 17) nil (25175 6522 608581 91000) 0 nil])
([nil nil ((15 . 16)) nil (25175 6522 608577 126000) 0 nil])
([nil nil ((17 . 19)) nil (25175 6522 608575 668000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -18) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 19) nil (25175 6522 608574 32000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -15) (undo-tree-id358 . -1) 16) nil (25175 6522 608569 797000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -16) (undo-tree-id356 . -1) (undo-tree-id357 . -1) 17) nil (25175 6522 608566 693000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -14) (undo-tree-id355 . -1) 15) nil (25175 6522 608562 577000) 0 nil])
([nil nil ((14 . 15)) nil (25175 6522 608559 722000) 0 nil])
([nil nil ((16 . 17)) nil (25175 6522 608558 513000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . -15) (undo-tree-id354 . -1) 16) nil (25175 6522 608556 732000) 0 nil])
([nil nil ((15 . 17)) nil (25175 6522 608553 612000) 0 nil])
([nil nil ((16 . 36)) nil (25175 6522 608552 267000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . -33) (undo-tree-id351 . -1) (#("o" 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . -34) (undo-tree-id352 . -1) (#(" " 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . -35) (undo-tree-id353 . -1) 36) nil (25175 6522 608549 728000) 0 nil])
([nil nil ((33 . 54)) nil (25175 6522 608543 431000) 0 nil])
([nil nil ((54 . 56)) nil (25175 6522 608541 848000) 0 nil])
([nil nil ((56 . 58)) nil (25175 6522 609448 195000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . -59) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) 60) nil (25175 6799 46262 921000) 0 nil] [nil nil ((11 . 64) (#(" * \"/
 * /\"anything you can do to everything is valid" 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (org-emphasis t font-lock-multiline t face (italic) fontified nil) 4 5 (org-emphasis t font-lock-multiline t face (italic) fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil composition (1 1 [8226]) face org-superstar-item) 8 9 (fontified nil) 9 53 (fontified nil face (italic) font-lock-multiline t org-emphasis t)) . 11) (undo-tree-id0 . -53) (undo-tree-id1 . -53) (undo-tree-id2 . -52) (undo-tree-id3 . -53) (undo-tree-id4 . -53) (undo-tree-id5 . -53) (undo-tree-id6 . -53) (undo-tree-id7 . -53) (undo-tree-id8 . -53) (undo-tree-id9 . -53) (undo-tree-id10 . -53) (undo-tree-id11 . -53) (undo-tree-id12 . -53) (undo-tree-id13 . -53) (undo-tree-id14 . -53) (undo-tree-id15 . -53) (undo-tree-id16 . -53) (undo-tree-id17 . -53) (undo-tree-id18 . -53) (undo-tree-id19 . -53) (undo-tree-id20 . -53) (undo-tree-id21 . -53) (undo-tree-id22 . -53) (undo-tree-id23 . -53) (undo-tree-id24 . -53) (undo-tree-id25 . -53) (undo-tree-id26 . -53) (undo-tree-id27 . -53) (undo-tree-id28 . -53) (undo-tree-id29 . -53) (undo-tree-id30 . -53) (undo-tree-id31 . -53) (undo-tree-id32 . -53) (undo-tree-id33 . -53) (undo-tree-id34 . -53) (undo-tree-id35 . -53) (undo-tree-id36 . -53) (undo-tree-id37 . -53) (undo-tree-id38 . -53) (undo-tree-id39 . -53) (undo-tree-id40 . -53) (undo-tree-id41 . -53) (undo-tree-id42 . -53) (undo-tree-id43 . -53) (undo-tree-id44 . -53) (undo-tree-id45 . -53) (undo-tree-id46 . -53) (undo-tree-id47 . -53) (undo-tree-id48 . -53) (undo-tree-id49 . -53) (undo-tree-id50 . -53) (undo-tree-id51 . -53) (undo-tree-id52 . -53) (undo-tree-id53 . -53) (undo-tree-id54 . -53) (undo-tree-id55 . -53) (undo-tree-id56 . -53) (undo-tree-id57 . -53) (undo-tree-id58 . -53) (undo-tree-id59 . -53) (undo-tree-id60 . -53) (undo-tree-id61 . -53) (undo-tree-id62 . -53) (undo-tree-id63 . -53) (undo-tree-id64 . -53) (undo-tree-id65 . -53) (undo-tree-id66 . -53) (undo-tree-id67 . -53) (undo-tree-id68 . -53) (undo-tree-id69 . -53) (undo-tree-id70 . -53) (undo-tree-id71 . -53) (undo-tree-id72 . -53) (undo-tree-id73 . -53) (undo-tree-id74 . -53) (undo-tree-id75 . -53) (undo-tree-id76 . -53) (undo-tree-id77 . -53) (undo-tree-id78 . -53) (undo-tree-id79 . -53) (undo-tree-id80 . -53) (undo-tree-id81 . -53) (undo-tree-id82 . -53) (undo-tree-id83 . -53) (undo-tree-id84 . -53) (undo-tree-id85 . -53) (undo-tree-id86 . -53) (undo-tree-id87 . -53) (undo-tree-id88 . -53) (undo-tree-id89 . -53) (undo-tree-id90 . -53) (undo-tree-id91 . -53) (undo-tree-id92 . -53) (undo-tree-id93 . -53) (undo-tree-id94 . -53) (undo-tree-id95 . -53) (undo-tree-id96 . -53) (undo-tree-id97 . -53) (undo-tree-id98 . -53) (undo-tree-id99 . -53) (undo-tree-id100 . -53) (undo-tree-id101 . -53) (undo-tree-id102 . -53) (undo-tree-id103 . -53) (undo-tree-id104 . -53) (undo-tree-id105 . -53) (undo-tree-id106 . -53) (undo-tree-id107 . -53) (undo-tree-id108 . -53) (undo-tree-id109 . -53) (undo-tree-id110 . -53) (undo-tree-id111 . -53) (undo-tree-id112 . -53) (undo-tree-id113 . -53) (undo-tree-id114 . -53) (undo-tree-id115 . -53) (undo-tree-id116 . -53) (undo-tree-id117 . -53) (undo-tree-id118 . -53) (undo-tree-id119 . -53) (undo-tree-id120 . -53) (undo-tree-id121 . -53) (undo-tree-id122 . -53) (undo-tree-id123 . -53) (undo-tree-id124 . -53) (undo-tree-id125 . -53) (undo-tree-id126 . -53) (undo-tree-id127 . -53) (undo-tree-id128 . -53) (undo-tree-id129 . -53) (undo-tree-id130 . -53) (undo-tree-id131 . -53) (undo-tree-id132 . -53) (undo-tree-id133 . -53) (undo-tree-id134 . -53) (undo-tree-id135 . -53) (undo-tree-id136 . -53) (undo-tree-id137 . -53) (undo-tree-id138 . -53) (undo-tree-id139 . -53) (undo-tree-id140 . -53) (undo-tree-id141 . -53) (undo-tree-id142 . -53) (undo-tree-id143 . -53) (undo-tree-id144 . -53) (undo-tree-id145 . -53) (undo-tree-id146 . -53) (undo-tree-id147 . -53) (undo-tree-id148 . -53) (undo-tree-id149 . -53) (undo-tree-id150 . -53) (undo-tree-id151 . -53) (undo-tree-id152 . -53) (undo-tree-id153 . -53) (undo-tree-id154 . -53) (undo-tree-id155 . -53) (undo-tree-id156 . -53) (undo-tree-id157 . -53) (undo-tree-id158 . -53) (undo-tree-id159 . -53) (undo-tree-id160 . -53) (undo-tree-id161 . -53) (undo-tree-id162 . -53) (undo-tree-id163 . -53) (undo-tree-id164 . -53) (undo-tree-id165 . -53) (undo-tree-id166 . -53) (undo-tree-id167 . -53) (undo-tree-id168 . -53) (undo-tree-id169 . -53) (undo-tree-id170 . -53) (undo-tree-id171 . -53) (undo-tree-id172 . -53) (undo-tree-id173 . -53) (undo-tree-id174 . -53) (undo-tree-id175 . -53) (undo-tree-id176 . -53) (undo-tree-id177 . -53) (undo-tree-id178 . -53) (undo-tree-id179 . -53) (undo-tree-id180 . -53) (undo-tree-id181 . -53) (undo-tree-id182 . -53) (undo-tree-id183 . -53) (undo-tree-id184 . -53) (undo-tree-id185 . -53) (undo-tree-id186 . -53) (undo-tree-id187 . -53) (undo-tree-id188 . -53) (undo-tree-id189 . -53) (undo-tree-id190 . -53) (undo-tree-id191 . -53) (undo-tree-id192 . -53) (undo-tree-id193 . -53) (undo-tree-id194 . -53) (undo-tree-id195 . -53) (undo-tree-id196 . -53) (undo-tree-id197 . -53) (undo-tree-id198 . -53) (undo-tree-id199 . -53) (undo-tree-id200 . -53) (undo-tree-id201 . -53) (undo-tree-id202 . -53) (undo-tree-id203 . -53) (undo-tree-id204 . -53) (undo-tree-id205 . -53) (undo-tree-id206 . -53) (undo-tree-id207 . -53) (undo-tree-id208 . -53) (undo-tree-id209 . -53) (undo-tree-id210 . -53) (undo-tree-id211 . -53) (undo-tree-id212 . -53) (undo-tree-id213 . -53) (undo-tree-id214 . -53) (undo-tree-id215 . -53) (undo-tree-id216 . -53) (undo-tree-id217 . -53) (undo-tree-id218 . -53) (undo-tree-id219 . -53) (undo-tree-id220 . -53) (undo-tree-id221 . -53) (undo-tree-id222 . -53) (undo-tree-id223 . -53) (undo-tree-id224 . -53) (undo-tree-id225 . -53) (undo-tree-id226 . -53) (undo-tree-id227 . -53) (undo-tree-id228 . -53) (undo-tree-id229 . -53) (undo-tree-id230 . -53) (undo-tree-id231 . -53) (undo-tree-id232 . -53) (undo-tree-id233 . -53) (undo-tree-id234 . -53) (undo-tree-id235 . -53) (undo-tree-id236 . -53) (undo-tree-id237 . -53) (undo-tree-id238 . -53) (undo-tree-id239 . -53) (undo-tree-id240 . -53) (undo-tree-id241 . -53) (undo-tree-id242 . -53) (undo-tree-id243 . -53) (undo-tree-id244 . -53) (undo-tree-id245 . -53) (undo-tree-id246 . -53) (undo-tree-id247 . -53) (undo-tree-id248 . -53) (undo-tree-id249 . -53) (undo-tree-id250 . -53) (undo-tree-id251 . -53) (undo-tree-id252 . -53) (undo-tree-id253 . -53) (undo-tree-id254 . -53) (undo-tree-id255 . -53) (undo-tree-id256 . -53) (undo-tree-id257 . -53) (undo-tree-id258 . -53) (undo-tree-id259 . -53) (undo-tree-id260 . -53) (undo-tree-id261 . -53) (undo-tree-id262 . -53) (undo-tree-id263 . -53) (undo-tree-id264 . -53) (undo-tree-id265 . -53) (undo-tree-id266 . -53) (undo-tree-id267 . -53) (undo-tree-id268 . -53) (undo-tree-id269 . -53) (undo-tree-id270 . -53) (undo-tree-id271 . -53) (undo-tree-id272 . -53) (undo-tree-id273 . -53) (undo-tree-id274 . -53) (undo-tree-id275 . -53) (undo-tree-id276 . -53) (undo-tree-id277 . -53) (undo-tree-id278 . -53) (undo-tree-id279 . -53) (undo-tree-id280 . -53) (undo-tree-id281 . -53) (undo-tree-id282 . -53) (undo-tree-id283 . -53) (undo-tree-id284 . -53) (undo-tree-id285 . -53) (undo-tree-id286 . -53) (undo-tree-id287 . -53) (undo-tree-id288 . -53) (undo-tree-id289 . -53) (undo-tree-id290 . -53) (undo-tree-id291 . -53) (undo-tree-id292 . -53) (undo-tree-id293 . -53) (undo-tree-id294 . -53) (undo-tree-id295 . -53) (undo-tree-id296 . -53) (undo-tree-id297 . -53) (undo-tree-id298 . -53) (undo-tree-id299 . -53) (undo-tree-id300 . -53) (undo-tree-id301 . -53) (undo-tree-id302 . -53) (undo-tree-id303 . -53) (undo-tree-id304 . -53) (undo-tree-id305 . -53) (undo-tree-id306 . -53) (undo-tree-id307 . -53) (undo-tree-id308 . -53) (undo-tree-id309 . -53) (undo-tree-id310 . -53) (undo-tree-id311 . -53) (undo-tree-id312 . -53) (undo-tree-id313 . -53) (undo-tree-id314 . -53) (undo-tree-id315 . -53) (undo-tree-id316 . -53) (undo-tree-id317 . -53) (undo-tree-id318 . -53) (undo-tree-id319 . -53) (undo-tree-id320 . -53) (undo-tree-id321 . -53) (undo-tree-id322 . -53) (undo-tree-id323 . -53) (undo-tree-id324 . -53) (undo-tree-id325 . -53) (undo-tree-id326 . -53) (undo-tree-id327 . -53) (undo-tree-id328 . -53) (undo-tree-id329 . -53) (undo-tree-id330 . -53) (undo-tree-id331 . -53) (undo-tree-id332 . -53) (undo-tree-id333 . -53) (undo-tree-id334 . -53) (undo-tree-id335 . -53) (undo-tree-id336 . -53) (undo-tree-id337 . -53) (undo-tree-id338 . -53) (undo-tree-id339 . -53) (undo-tree-id340 . -53) (undo-tree-id341 . -53) (undo-tree-id342 . -53) (undo-tree-id343 . -53) (undo-tree-id344 . -53) (undo-tree-id345 . -53) (undo-tree-id346 . -53) (undo-tree-id347 . -53) (undo-tree-id348 . -53) (undo-tree-id349 . -6) (11 . 17) (#("\"/" 0 1 (fontified t face (italic) font-lock-multiline t org-emphasis t) 1 2 (fontified t face (italic) font-lock-multiline t org-emphasis t)) . 58) (undo-tree-id350 . -2)) ((58 . 60) (#(" * \"/
" 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (org-emphasis t font-lock-multiline t face (italic) fontified nil) 4 5 (org-emphasis t font-lock-multiline t face (italic) fontified nil) 5 6 (fontified nil)) . 11) (11 . 64) (#(" * /\"anything you can do to everything is valid
 * \"/" 0 1 (fontified t) 1 2 (fontified t composition (1 1 [8226]) face org-superstar-item) 2 3 (fontified t) 3 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t composition (1 1 [8226]) face org-superstar-item) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 11) (undo-tree-id367 . -48) (undo-tree-id368 . -53) (undo-tree-id369 . -51) (undo-tree-id370 . -51) (undo-tree-id371 . -51)) (25175 6522 608505 79000) 0 nil])
([nil nil ((59 . 60)) nil (25175 6799 46189 247000) 0 nil])
nil
([nil current ((60 . 61) 53) nil (25175 6799 46182 775000) 0 nil])
nil
